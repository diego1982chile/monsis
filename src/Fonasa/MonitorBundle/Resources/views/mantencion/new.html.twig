{% extends 'base.html.twig' %}
{% form_theme form 'bootstrap_3_layout.html.twig' %}
{% block body %}        
    <h1>Nueva Mantencion {{ app.session.get('nombreComponente') }}</h1>
    <div id="form" style="width:60%;display:none">
        <div class="btn-group pull-right">            
            <a href="#" id="adjuntarDocumento2" class="add_tag_link btn btn-default" role="button">                            
                Adjuntar
                <span class="glyphicon glyphicon-paperclip">                       
                </span>
            </a>                                        
            <a href="#" id="agregarComentario2" class="add_tag_link btn btn-default" role="button">                            
                Comentar
                <span class="glyphicon glyphicon-comment">                       
                </span>
            </a>                            
        </div>
        <div class="panel-body">
    {{ form_start(form) }}              
        {{ form_start(form) }}        
        {{ form_errors(form) }}                        
        {{ form_row(form.componente) }}
        {% if form.tipoRequerimiento is defined %}
            {{ form_row(form.tipoRequerimiento) }}
        {% endif %} 
        {% if form.numeroRequerimiento is defined %}
            {{ form_label(form.numeroRequerimiento) }}        
            <div class="form-group input-group">        
                <span class="input-group-addon" id="basic-addon1">Req#</span>
                {{ form_widget(form.numeroRequerimiento) }}                
            </div>                 
        {% endif %}
        {{ form_label(form.tipoMantencion) }}                    
        <div id="form_tipoMantencion">                    
            {% for child in form.tipoMantencion %}
                {{ form_label(child) }} 
                <label class="radio-inline">                                       
                {{ form_widget(child) }}
                </label>                
            {% endfor %}
        </div>    
        {{ form_label(form.codigoInterno) }}
        <div class="form-group input-group">
            <span class="input-group-addon" id="basic-addon2">-</span>
            {{ form_widget(form.codigoInterno) }}
        </div>                    
        {{ form_row(form.descripcion) }}
        {{ form_row(form.severidad) }}
        {{ form_row(form.usuario) }}                
        {{ form_row(form.hhEstimadas) }}                
        <div id="form_inicioProgramado">                    
            {% for child in form.inicioProgramado %}
                {{ form_label(child) }} 
                <label class="radio-inline">                                       
                {{ form_widget(child) }}
                </label>                
            {% endfor %}
        </div>            
        {% if form.fechaInicio is defined %}
            {{ form_row(form.fechaInicio) }}        
        {% endif %}        
        <label class="control-label required">
            Comentarios
        </label>   
        <div class="form-group input-group" style="width:100%">    
            <ul class="comments" data-prototype="{{ form_widget(form.comentariosMantencion.vars.prototype)|e }}">
                {% if form.comentariosMantencion|length > 0  %}
                        {# iterate over each existing tag and render its only field: name #}                
                        {% for com in form.comentariosMantencion %}
                            <div class="input-group comment-field">                                
                                {{ form_row(com.comentario) }}                                                                
                                <span class="input-group-btn">
                                    <a role="button" class="btn elim-doc" id="{{com.id.vars.value}}">
                                        <span class="glyphicon glyphicon-remove">                                    
                                        </span>
                                    </a>                                
                                </span>
                            </div>
                        {% endfor %}
                    {% else %}  
                        <div class="input-group comment-field place" id="place_holder2" style="width:100%;">
                            <h4 class="form-group" style="opacity:0.5">                                
                                Ningún Comentario
                            </h4>
                        </div>
                    {% endif %}
            </ul>   
            <a href="#" id="agregarComentario" class="add_tag_link btn active btn-info" role="button" style="display:none">                            
                <span class="glyphicon glyphicon-paperclip">                       
                </span>
            </a>
        </div>        
        <label class="control-label required">
            Documentos Adjuntos
        </label>   
        <div class="form-group input-group" style="width:100%">    
            <ul class="files" data-prototype="{{ form_widget(form.documentosMantencion.vars.prototype)|e }}">
                {% if form.documentosMantencion|length > 0  %}
                        {# iterate over each existing tag and render its only field: name #}                
                        {% for doc in form.documentosMantencion %}
                            <div class="input-group file-field">
                                {% if doc.tipoDocumentoMantencion is defined %}                    
                                    {{ form_row(doc.tipoDocumentoMantencion) }}
                                    {{ form_row(doc.archivo) }}                     
                                {% else %}  
                                    <div class="form-group">
                                        <a href="{{ asset('bundles/monsis/uploads/' ~ doc.archivo.vars.value ) }}">                                    
                                            {{ doc.nombre.vars.value }}
                                        </a>
                                    </div>
                                {% endif %}
                                <span class="input-group-btn">
                                    <a role="button" class="btn elim-doc" id="{{doc.archivo.vars.value}}">
                                        <span class="glyphicon glyphicon-remove">                                    
                                        </span>
                                    </a>                                
                                </span>
                            </div>
                        {% endfor %}
                    {% else %}  
                        <div class="input-group file-field place" id="place_holder" style="width:100%;">
                            <h4 class="form-group" style="opacity:0.5">                                
                                Ningún Documento Adjunto                                
                            </h4>
                        </div>
                    {% endif %}
            </ul>   
            <a href="#" id="adjuntarDocumento" class="add_tag_link btn active btn-info" role="button" style="display:none">                            
                <span class="glyphicon glyphicon-paperclip">                       
                </span>
            </a>
        </div>                
        <input type="submit" class='btn btn-primary active' style="display:none" value="Create" />
        <button id="validate_form" class="btn btn-primary active" type="button">Grabar</button>
    {{ form_end(form) }}
        </div>
    </div>    
    <ul>
        {% if form.tipoRequerimiento is defined %}
        <li>
            <a href="{{ path('mantencion_index') }}">Volver</a>
        </li>
        {% else %}
        <li>
            <a href="{{ path('incidencia_index') }}">Volver</a>
        </li>
        {% endif %}
    </ul>
{% endblock %}

{% block javascripts %}    
<script>
var $collectionHolder;
var $collectionHolder2;

// setup an "add a tag" link
//var $addTagLink = $('<a href="#" class="add_tag_link">Add a tag</a>');
var $addFileLink = $('#adjuntarDocumento');
var $newLinkLi = $('').append($addFileLink);

var $addCommentLink = $('#agregarComentario');
var $newLinkLi2 = $('').append($addCommentLink);    
    
$( window ).load(function() {
   $('#form').show();
});    
    
var $inicioProgramado = $('#mantencion_inicioProgramado');

var $numeroReq = $('#mantencion_numeroRequerimiento');

var $numeroMantencion = $('#mantencion_codigoInterno');

var $hhEstimadas = $('#mantencion_hhEstimadas');

var $validar= $('#validar');
// When sport gets selected ...
var $inicioProgramado = $('#form_inicioProgramado');

var $tipoMantencion = $('#form_tipoMantencion');

var $origenMantencion = $('#mantencion_origenMantencion');

$validateForm=$('#validate_form');

var loader = new Image();
loader.src = '{{ asset('bundles/monsis/images/loader-minitrans.gif') }}';
loader.className = 'loader';

var save = new Image();
save.src = '{{ asset('bundles/monsis/images/save_2.png') }}';
save.className = 'save';

$validateForm.append(save);

var prefix;

$(function() {
    
    switch($componente.val()){
        case '1':
            prefix='SIGG';            
            break;
        case '2':
            prefix='GGPF';            
            break;
        case '3':
            prefix='PM';            
            break;
        case '4':
            prefix='DWH';            
            break;        
    }    

    switch($tipoMantencion.find(':checked').val()){
        case '1':
            $prefijoCodigo.html(prefix+'-MC');
            break;
        case '2':
            $prefijoCodigo.html(prefix+'-ME');
            break;
    }
    
    $('#adjuntarDocumento2').click(function(){
        $( "#adjuntarDocumento" ).trigger( "click" ); 
    });    

    $('#agregarComentario2').click(function(){
        $( "#agregarComentario" ).trigger( "click" ); 
    }); 
    
    // Get the ul that holds the collection of tags
    $collectionHolder = $('ul.files');
    $collectionHolder2 = $('ul.comments');

    // add a delete link to all of the existing tag form li elements
    $collectionHolder.find('li').each(function() {
        addFileFormDeleteLink($(this));
    });        
    
    $collectionHolder2.find('li').each(function() {
        addCommentFormDeleteLink($(this));
    });        
    
    //////////////////////////////////////////////////
    // Get the ul that holds the collection of tags
    $collectionHolder = $('ul.files');
    $collectionHolder2 = $('ul.comments');

    // add the "add a tag" anchor and li to the tags ul
    $collectionHolder.append($newLinkLi);
    $collectionHolder2.append($newLinkLi2);

    // count the current form inputs we have (e.g. 2), use that as the new
    // index when inserting a new item (e.g. 2)
    $collectionHolder.data('index', $collectionHolder.find(':input').length);
    $collectionHolder2.data('index', $collectionHolder2.find(':input').length);

    $addFileLink.on('click', function(e) {        
        // prevent the link from creating a "#" on the URL        
        e.preventDefault();

        // add a new tag form (see next code block)
        addFileForm($collectionHolder, $addFileLink);
    });
    
    $addCommentLink.on('click', function(e) {
        // prevent the link from creating a "#" on the URL        
        e.preventDefault();        
        // add a new tag form (see next code block)
        addCommentForm($collectionHolder2, $addCommentLink);
    });
    ////////////////////////////////////////////////////////////////
}); 

$inicioProgramado.change(function() {  
  $inicioProgramado.append(loader);    
  // ... retrieve the corresponding form.
  var $form = $(this).closest('form');
  // Simulate form data, but only include the selected sport value.
  var data = {};  
  data[$inicioProgramado.find(':checked').attr('name')] = $inicioProgramado.find(':checked').val();   
  // Submit data via AJAX to the form's action path.
  $.ajax({
    url : $form.attr('action'),
    type: $form.attr('method'),
    data : data,
    success: function(html) {
        // Replace current position field ...      
        $('#mantencion_fechaInicio').parent().html('');
        $inicioProgramado.after(
          // ... with the returned one from the AJAX response.                
          $(html).find('#mantencion_fechaInicio').parent()                        
        );
        $( "#mantencion_fechaInicio_date" ).datepicker();    
        // Position field now displays the appropriate positions.
        $(loader).remove();
      }
  });
});

$prefijoCodigo = $('#basic-addon2');

$tipoMantencion.change(function() {      
    switch($(this).find(':checked').val()){
        case '1':
            $prefijoCodigo.html(prefix+'-MC');
            break;
        case '2':
            $prefijoCodigo.html(prefix+'-ME');
            break;
    }
});

var $componente = $('#mantencion_componente');
// When sport gets selected ...
$componente.change(function() {    
  $('#mantencion_tipoRequerimiento').parent().children(':eq(0)').append(loader);    
  
    switch($componente.find(':selected').text()){
        case 'SIGGES':
            prefix='SIGG';
            break;
        case 'GGPF':
            prefix='GGPF';
            break;
        case 'PM':
            prefix='PM';
            break;
        case 'BGI / DataWareHouse':
            prefix='DWH';
            break;      
    }
    
    $prefijoCodigo.html(prefix);
  
  // ... retrieve the corresponding form.
  var $form = $(this).closest('form');
  // Simulate form data, but only include the selected sport value.
  var data = {};
  data[$componente.attr('name')] = $componente.val(); 
  // Submit data via AJAX to the form's action path.
  $.ajax({
    url : $form.attr('action'),
    type: $form.attr('method'),
    data : data,
    success: function(html) {
      // Replace current position field ...
      $('#mantencion_tipoRequerimiento').replaceWith(
        // ... with the returned one from the AJAX response.
        $(html).find('#mantencion_tipoRequerimiento')
      );
      // Position field now displays the appropriate positions.
      //$('.loader').remove();
      $(loader).remove();
    }
  });
});

function validarNumeroReq(){
    var data = {};
    data['numeroRequerimiento'] = $numeroReq.val();     
    data['id'] = $('#mantencion_id').val();    

    $.post("{{ path('mantencion_check') }}",data,function(data){
        if(data.error){          
            $numeroReq.focus();
            $numeroReq.qtip({ // Grab some elements to apply the tooltip to
                  content: {
                      text: '<span class="glyphicon glyphicon glyphicon-exclamation-sign"></span>&nbsp;'+data.message
                  },
                  show: {
                      ready: true,
                      delay: 50
                  },
                  style: {
                      classes: 'alert alert-danger',
                      def: false,                    
                  },            
                  position: {
                          my: 'top left',  // Position my top left...
                          at: 'bottom center', // at the bottom right of...
                          target: $numeroReq // my target
                      }                
            });        
            $(loader).replaceWith(save);
            $validateForm.attr('disabled',false);
        }             
        else{        
            //$('form[name="mantencion"]').submit();
            validarNumeroMantencion();
        }                
    });                                          
}

function validarNumeroMantencion(){
    var data = {};
    data['numeroMantencion'] = $numeroMantencion.val(); 
    data['id'] = $('#mantencion_id').val();

    $.post("{{ path('mantencion_check2') }}",data,function(data){
        if(data.error){          
            $numeroMantencion.focus();
            $numeroMantencion.qtip({ // Grab some elements to apply the tooltip to
                  content: {
                      text: '<span class="glyphicon glyphicon glyphicon-exclamation-sign"></span>&nbsp;'+data.message
                  },
                  show: {
                      ready: true,
                      delay: 50
                  },
                  style: {
                      classes: 'alert alert-danger',
                      def: false,                    
                  },            
                  position: {
                          my: 'top left',  // Position my top left...
                          at: 'bottom center', // at the bottom right of...
                          target: $numeroMantencion // my target
                      }                
            });        
            $(loader).replaceWith(save);
            $validateForm.attr('disabled',false);
        }             
        else{        
            //$('form[name="mantencion"]').submit();
            validarHhEstimadas();
        }                
    });              
}

function validarHhEstimadas(){
    var data = {};
    data['hhEstimadas'] = $hhEstimadas.val();     

    $.post("{{ path('mantencion_check3') }}",data,function(data){
        if(data.error){          
            $hhEstimadas.focus();
            $hhEstimadas.qtip({ // Grab some elements to apply the tooltip to
                  content: {
                      text: '<span class="glyphicon glyphicon glyphicon-exclamation-sign"></span>&nbsp;'+data.message
                  },
                  show: {
                      ready: true,
                      delay: 50
                  },
                  style: {
                      classes: 'alert alert-danger',
                      def: false,                    
                  },            
                  position: {
                          my: 'top left',  // Position my top left...
                          at: 'bottom center', // at the bottom right of...
                          target: $hhEstimadas // my target
                      }                
            });        
            $(loader).replaceWith(save);
            $validateForm.attr('disabled',false);
        }             
        else{                    
            $('form[name="mantencion"]').submit();            
        }                
    });              
}

$validateForm.click(function(){ 
  
  $(save).replaceWith(loader);
  //$(this).append(loader);    
  $(this).attr('disabled',true);
  
  var error = false;
  
  // Submit data via AJAX to the form's action path.
  $('.form-group').each(function(){           
       $field=$(this).find('input,select,textarea');              
       
       if($field.val()===''){   
            error = true;
            $field.focus();
            $field.qtip({ // Grab some elements to apply the tooltip to
                content: {
                    text: '<span class="glyphicon glyphicon glyphicon-exclamation-sign"></span>&nbsp;Completa este campo'
                },
                show: {
                    ready: true,
                    delay: 50
                },
                style: {
                    classes: 'alert alert-danger',
                    def: false,                    
                },            
                position: {
                        my: 'top left',  // Position my top left...
                        at: 'bottom center', // at the bottom right of...
                        target: $field // my target
                    }                
            });            
            return false;
       }           
       else{
            $('.qtip').remove();
       }
    });
        
    if(error){                
        $(loader).replaceWith(save);
        $validateForm.attr('disabled',false);
        return false; 
    }    
    // Si se pasan las validaciones por campos incompletos, se valida formato y duplicados de campos especificos    
    switch($origenMantencion.find(':selected').text()){
        case 'Requerimiento':
            validarNumeroReq();
            break;
        case 'Incidencia':
            validarNumeroMantencion();
            break;
    }                
        
});

function addFileForm($collectionHolder, $newLinkLi) {
    // ocultar place_holder
    $('#place_holder').hide();
    
    // Get the data-prototype explained earlier
    var prototype = $collectionHolder.data('prototype');

    // get the new index
    var index = $collectionHolder.data('index');

    // Replace '__name__' in the prototype's HTML to
    // instead be a number based on how many items we have
    var newForm = prototype.replace(/__name__/g, index);

    // increase the index with one for the next item
    $collectionHolder.data('index', index + 1);

    // Display the form in the page in an li, before the "Add a tag" link li
    var $newFormLi = $('<div class="input-group file-field" style="margin-left:40px">').append(newForm);
    $newLinkLi.before($newFormLi);
    
    // add a delete link to the new form
    addFileFormDeleteLink($newFormLi);
}

function addFileFormDeleteLink($tagFormLi) {
    var $removeFormA = $('<span class="input-group-btn"><a role="button" class="btn elim-doc" href="#"><span class="glyphicon glyphicon-remove"></span></a></span></div>');
    $tagFormLi.append($removeFormA);

    $removeFormA.on('click', function(e) {
                
        // si no hay file fields mostrar placeholder        
        if( $('.file-field').length <= 2)
            $('#place_holder').show();
        // prevent the link from creating a "#" on the URL
        e.preventDefault();

        // remove the li for the tag form
        $tagFormLi.remove();
    });
}

function addCommentForm($collectionHolder2, $newLinkLi2) {    
    // ocultar place_holder
    $('#place_holder2').hide();
    
    // Get the data-prototype explained earlier
    var prototype = $collectionHolder2.data('prototype');

    // get the new index
    var index = $collectionHolder2.data('index');

    // Replace '__name__' in the prototype's HTML to
    // instead be a number based on how many items we have
    var newForm = prototype.replace(/__name__/g, index);

    // increase the index with one for the next item
    $collectionHolder2.data('index', index + 1);

    // Display the form in the page in an li, before the "Add a tag" link li
    var $newFormLi = $('<div class="input-group comment-field" style="margin-left:40px">').append(newForm);
    $newLinkLi2.before($newFormLi);
    
    // add a delete link to the new form
    addCommentFormDeleteLink($newFormLi);
}

function addCommentFormDeleteLink($tagFormLi) {
    var $removeFormA = $('<span class="input-group-btn"><a role="button" class="btn elim-doc" href="#"><span class="glyphicon glyphicon-remove"></span></a></span></div>');
    $tagFormLi.append($removeFormA);

    $removeFormA.on('click', function(e) {
                
        // si no hay file fields mostrar placeholder        
        if( $('.comment-field').length <= 2)
            $('#place_holder2').show();
        // prevent the link from creating a "#" on the URL
        e.preventDefault();

        // remove the li for the tag form
        $tagFormLi.remove();
    });
}

</script>
{% endblock %}