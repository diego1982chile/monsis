{% extends 'base.html.twig' %}
{% form_theme GlobalFilters 'bootstrap_3_layout.html.twig' %}
{% block stylesheets %}    
{% endblock %}
{% block filtro %}        
    <ul class="nav navbar-nav"> 
        <li class="divider-vertical"></li>
        <li class="active"> 
            <form id="filtros" action="" method="post" style="display:none">   
                {{ form_start(GlobalFilters) }}        
                {{ form_errors(GlobalFilters) }}         
                {{ form_row(GlobalFilters.Componente) }}         
                {{ form_row(GlobalFilters.Estado) }}         
                {{ form_row(GlobalFilters.Mes) }}            
                {{ form_row(GlobalFilters.Anio) }} 
                <div class="form-group">        
                    {{ form_label(GlobalFilters.Reset) }}         
                    <label id="form_Reset" class="btn btn-warning active form-control">                
                        {{ form_widget(GlobalFilters.Reset) }}        
                    </label>             
                </div>
                {{ form_end(GlobalFilters) }}                        
            </form>  
        </li>
        <li class="divider-vertical"></li>                    
    </ul>                 
{% endblock %}
{% block body %}
    {% for flash_message in app.session.flashbag.get('notice') %}            
    <div class="alert alert-info alert-dismissible" role="alert">                
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h3 style="margin:0px">
            <span class="glyphicon glyphicon glyphicon-ok-sign"></span>&nbsp;
            &nbspOperación realizada con éxito
        </h3>
        <div>
            <ul>
                {% set foo = flash_message|split('|') %}
                {% for var in foo %}                            
                <li style="margin:10px">                    
                    {{ var }}
                </li>
                {% endfor %}
            </ul>
        </div>
    </div>                    
    {% endfor %}
    <h2 id="title"></h2>
    <br>
    <table id="mantenciones" class="display table-striped" style="display:none" width="100%">
        <thead>
            <tr>
                <th width="3%">&nbsp;</th>
                <th width="5%">N°Req/Ticket</th>                                                
                <th width="5%">N°Mantencion</th>                                
                <th width="10%">Fecha inicio</th>                                
                <th width="10%">Fecha término</th>                
                <th width="12%">Estado</th>                
                <th width="4%">Show/Edit</th>                  
            </tr>
        </thead>
        <tbody>        
        </tbody>
    </table>
    {% if is_granted("ROLE_ADMIN") %}
    <ul>
        <li>
            <a href="{{ path('mantencion_new') }}">Nueva Mantención</a>
            <div class="toolbar" style="float:right">
            </div>
        </li>        
    </ul>    
    {% endif %}
{% endblock %}
{% block javascripts %}
<script>
    var $anio = $('#form_Anio');
    var $mes = $('#form_Mes');
    var $estado = $('#form_Estado');
    var $componente = $('#form_Componente');
    var $resetFiltros = $('#form_Reset');
    
    var loader = new Image();
    loader.src = '{{ asset('bundles/monsis/images/loader-minitrans.gif') }}';
    loader.className = 'loader';

    var reset = new Image();
    reset.src = '{{ asset('bundles/monsis/images/reset_1.png') }}';
    reset.className = 'save';
    
    $resetFiltros.children(':eq(0)').append(reset);
    
    $( window ).load(function() {
        $('#filtros').show();
    });
    
    
    function updateTitle(){
        $('#title').html("Mantenciones "+
                         $estado.find('option:selected').text()+" "+
                         $componente.find('option:selected').text()+" "+
                         $mes.find('option:selected').text()+" "+
                         $anio.val());        
    }
    
    $(function() {
        $('#mantenciones th').removeClass('ui-state-default');    
        $('#mantenciones').show();                        
        updateTitle();
    });     
    
    var oTable = $('#mantenciones').dataTable({
            bPagination: true,                        
            //"pagingType": "full_numbers",
            iDisplayLength: 4,
            lengthMenu: [[4, 25, 50, -1], [4, 25, 50, "Todos"]],
            bJQueryUI: false,
            bServerSide: true,
            sAjaxSource: '{{ path('mantencion_body') }}',
            sServerMethod: 'GET',
            bProcessing: true,                        
            aoColumnDefs: [
                    {
                    aTargets: [0],
                    orderable: false,
                    class: 'fillRate'   
                    },       
                    {
                    aTargets: [1,2,3,4,5],
                    class: 'cols'                
                    }                             
                ],            
            order: [[ 1, 'desc' ]],                                    
            dom: 'Blfrtip',                         
            buttons: [
                //'copy', 'csv', 'excel', 'pdf', 'print'
                'excel'
            ],
            language: {
                lengthMenu: " _MENU_ registros por página",
                //zeroRecords: "Nothing found - sorry",
                info: "Mostrando _START_ a _END_ de _TOTAL_ registros",
                infoEmpty: "No records available",
                infoFiltered: "(filtered from _MAX_ total records)",
                sSearch: "Buscar:"
            },                     
            fnDrawCallback: function( oSettings ) {
                $('#mantenciones th').removeClass('ui-state-default');                                                                 
                $('.dataTables_paginate').removeClass('ui-buttonset');                  
                $('.fg-button').removeClass('ui-state-default');                                  
            },
            fnServerData: function ( sSource, aoData, fnCallback ) {
			/* Add some extra data to the sender */
			aoData.push( { "name": "anio", "value": $anio.val() } );
                        aoData.push( { "name": "mes", "value": $mes.val() } );
                        aoData.push( { "name": "estado", "value": $estado.val() } );
                        aoData.push( { "name": "componente", "value": $componente.val() } );
                        aoData.push( { "name": "resetFiltros", "value": $resetFiltros.find(':checked').val() } );
                        
			$.getJSON( sSource, aoData, function (json) { 
                            /* Do whatever additional processing you want on the callback, then tell DataTables */                                
                            //$('div.toolbar').html(json.pap);
                            fnCallback(json)
                            
                            $(".dropdown-menu > li > a.trigger").on("click",function(e){                                                    
                                var current=$(this).next();
                                var grandparent=$(this).parent().parent();
                                if($(this).hasClass('left-caret')||$(this).hasClass('right-caret'))
                                    $(this).toggleClass('right-caret left-caret');
                                grandparent.find('.left-caret').not(this).toggleClass('right-caret left-caret');
                                grandparent.find(".sub-menu:visible").not(current).hide();
                                current.toggle();
                                e.stopPropagation();
                            });

                            $(".dropdown-menu > li > a:not(.trigger)").on("click",function(){
                                var root=$(this).closest('.dropdown');
                                root.find('.left-caret').toggleClass('right-caret left-caret');
                                root.find('.sub-menu:visible').hide();
                            });                                                           
                            
                            $( "a.estados" ).on( "click", function(e) {                                                                                                   
                                if($(this).parent().parent().prev().text()==$(this).text())
                                    return false;
                                else
                                    return true;
                            });
                            
                            $('div.toolbar').html(json.pap);
                            
                            /*
                            $( "a.estados" ).on( "click", function(e) {                                                                                                                                   
                                if($(this).text()=='Cerrada'){
                                    alert('No se puede');
                                    return false;
                                }
                                else
                                    return true;
                            });     
                            */
                            
                            $("#cerrar").on( "click", function(e) {                                  
                                $(this).attr('href',$(this).attr('href').replace('null_1',$componente.val()));      
                                $(this).attr('href',$(this).attr('href').replace('null_2',$mes.val()));      
                                $(this).attr('href',$(this).attr('href').replace('null_3',$anio.val()));                                      
                                //window.location=$(this).attr('href');                                 
                                return true;
                            }); 
			});
                        
                        if($resetFiltros.find(':checked').val()){                                                                    
                                //$(loader).parent().children(':eq(1)').replaceWith(reset);    
                                //$resetFiltros.attr('disabled',false);
                                location.reload();  
                        }       
            }                    
        });   
        
    oTable.on( 'buttons-action', function ( e, buttonApi, dataTable, node, config ) {
        console.log( 'Button '+buttonApi.text()+' was activated' );
    } );

    $anio.change(function() {
        updateTitle();
        oTable.fnDraw();            
    });

    $mes.change(function() {
        updateTitle();
        oTable.fnDraw();            
    });

    $estado.change(function() {
        updateTitle();
        oTable.fnDraw();            
    });

    $componente.change(function() {
        updateTitle();
        oTable.fnDraw();            
    });

    $resetFiltros.click(function() {
        $(reset).parent().children(':eq(1)').replaceWith(loader);    
        $(this).attr('disabled',true);            
        updateTitle();
        oTable.fnDraw();            
    });        

    setInterval( function () {
        oTable.fnDraw(false);
    }, 30000 );
    
</script>
{% endblock %}
